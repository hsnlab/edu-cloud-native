#!/bin/bash

# Assume template's UserData has these:

# su ubuntu
# apt install git
# cd /home/ubuntu
# git clone https://github.com/hsnlab/edu-cloud-native.git
# sudo chown -R ubuntu:ubuntu edu-cloud-native/

# Assume these files exist
#   ~/.role
#   ~/.stackid

THIS_SCRIPT=$(realpath $0)
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
K3S_BIN=/usr/local/bin/k3s
USER_HOME=/home/ubuntu

function exec_init_script() {
    cd $USER_HOME
    if [ ! -e .init_param ]; then
        return
    fi
    script_url=$(cat .init_param)
    if [ -z "$script_url" ]; then
        return
    fi
    curl -sfL "$script_url" -o init_script
    chmod u+x init_script
    ./init_script
    rm init_script .init_param
}

function install_server() {
    args="  --write-kubeconfig-mode 644"
    args+=" --tls-san $(ec2metadata --public-ipv4)"
    args+=" --node-external-ip $(ec2metadata --public-ipv4)"
    args+=" --advertise-address $(ec2metadata --local-ipv4)"
    if [ -x $K3S_BIN ]; then
        $K3S_BIN server $args
    else
        curl -sfL https://get.k3s.io | sh -s - $args
    fi
    # Save info for the agents
    s3_bucket=s3://$(cat $USER_HOME/.stackid)
    src=/var/lib/rancher/k3s/server/node-token
    sudo aws s3 cp $src $s3_bucket/k3s_token
    echo "https://$(ec2metadata --local-ipv4):6443" > $USER_HOME/.k3s_url
    aws s3 cp $USER_HOME/.k3s_url $s3_bucket/k3s_url
    exec_init_script
}

function install_agent() {
    # Set K3S_URL and K3S_TOKEN
    s3_bucket=s3://$(cat $USER_HOME/.stackid)
    while ! aws s3 cp --quiet $s3_bucket/k3s_url $USER_HOME/.k3s_url; do sleep 5; done
    aws s3 cp --quiet $s3_bucket/k3s_token $USER_HOME/.k3s_token
    export K3S_URL=$(cat $USER_HOME/.k3s_url)
    export K3S_TOKEN=$(cat $USER_HOME/.k3s_token)

    if [ -x $K3S_BIN ]; then
        $K3S_BIN agent
    else
        curl -sfL https://get.k3s.io | sh -s -
    fi
    # Remove connecting info as it can get outdated if the server
    # restarts
    rm $USER_HOME/.k3s_url $USER_HOME/.k3s_token
}

if ! which aws; then
    sudo snap install aws-cli --classic
fi
if ! which uudecode; then
    sudo apt install sharutils
fi
if [ "$(cat $USER_HOME/.role)" == server ]; then
    install_server
else
    install_agent
fi

sudo sed -i -e '/ExecStart=/{s|.*|ExecStart=-'$THIS_SCRIPT'|;q}' \
     /etc/systemd/system/k3s.service

bashrc=$USER_HOME/.bashrc
if ! grep -q kubectl.completion $bashrc; then
    echo >> $bashrc
    echo "source <(kubectl completion bash)" >> $bashrc
fi
if ! grep -q export.EDITOR=nano $BASHRC; then
    echo 'export EDITOR=nano' >> $BASHRC
fi
if ! which docker; then
    sudo $SCRIPT_DIR/../k8s-intro/docker-install.sh
fi
